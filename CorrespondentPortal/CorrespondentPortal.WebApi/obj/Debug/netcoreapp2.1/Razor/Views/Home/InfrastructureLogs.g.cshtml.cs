#pragma checksum "C:\Users\athigpen\Source\Repos\Forge2018_Unicorns\CorrespondentPortal\CorrespondentPortal.WebApi\Views\Home\InfrastructureLogs.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9078d3d453605c702db667708bba61d31086d596"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_InfrastructureLogs), @"mvc.1.0.view", @"/Views/Home/InfrastructureLogs.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/InfrastructureLogs.cshtml", typeof(AspNetCore.Views_Home_InfrastructureLogs))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9078d3d453605c702db667708bba61d31086d596", @"/Views/Home/InfrastructureLogs.cshtml")]
    public class Views_Home_InfrastructureLogs : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\athigpen\Source\Repos\Forge2018_Unicorns\CorrespondentPortal\CorrespondentPortal.WebApi\Views\Home\InfrastructureLogs.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
            BeginContext(32, 2169, true);
            WriteLiteral(@"<div class=""container-fluid bg-gallery"">

    <div class=""row"">
        <div class=""col-lg-12 col-md-12 py-3"">
            <span class=""pull-right text-muted font-italic"" id=""timeZoneMessage""></span>
            <div class=""form-check form-check-inline"">
                <input class=""form-check-input"" type=""checkbox"" id=""showInformation"">
                <label class=""form-check-label"" for=""showInformation"">Information</label>
            </div>
            <div class=""form-check form-check-inline"">
                <input class=""form-check-input"" type=""checkbox"" id=""showDebug"">
                <label class=""form-check-label"" for=""showDebug"">Debug</label>
            </div>
            <div class=""form-check form-check-inline"">
                <input class=""form-check-input"" type=""checkbox"" id=""showWarning"" checked=""checked"">
                <label class=""form-check-label"" for=""showCritical"">Warning</label>
            </div>
            <div class=""form-check form-check-inline"">
            ");
            WriteLiteral(@"    <input class=""form-check-input"" type=""checkbox"" id=""showCritical"" checked=""checked"">
                <label class=""form-check-label"" for=""showCritical"">Critical</label>
            </div>
            <div class=""form-check form-check-inline"">
                <input class=""form-check-input"" type=""checkbox"" id=""showError"" checked=""checked"">
                <label class=""form-check-label"" for=""showError"">Error</label>
            </div>
            <br />
            <br />
            <div>
                <table id=""logtable"" class=""table table-responsive table-bordered col-1-align-center col-5-bloat"">
                    <thead>
                        <tr>
                            <th scope=""col"">Created Date</th>
                            <th scope=""col"">Machine</th>
                            <th scope=""col"">Severity</th>
                            <th scope=""col"">Category</th>
                            <th scope=""col"">Content</th>
                        </tr>
             ");
            WriteLiteral("       </thead>\r\n                </table>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(2218, 228, true);
                WriteLiteral("\r\n    <script>\r\n        $(function () {\r\n            var table = $(\'#logtable\').DataTable({\r\n                \"order\": [[0, \"desc\"]],\r\n                \"serverSide\": \"true\",\r\n                \"ajax\": {\r\n                    \"url\": \"");
                EndContext();
                BeginContext(2447, 55, false);
#line 56 "C:\Users\athigpen\Source\Repos\Forge2018_Unicorns\CorrespondentPortal\CorrespondentPortal.WebApi\Views\Home\InfrastructureLogs.cshtml"
                       Write(Url.Action("SearchInfrastructureLogsDataTable", "Home"));

#line default
#line hidden
                EndContext();
                BeginContext(2502, 3182, true);
                WriteLiteral(@""",
                    ""data"": function (data) {
                        var logLevels = new Array();
                        if ($('#showInformation').is(':checked')) {
                            logLevels.push(""Information"");
                        }
                        if ($('#showCritical').is(':checked')) {
                            logLevels.push(""Critical"");
                        }
                        if ($('#showDebug').is(':checked')) {
                            logLevels.push(""Debug"");
                        }
                        if ($('#showError').is(':checked')) {
                            logLevels.push(""Error"");
                        }
                        if ($('#showWarning').is(':checked')) {
                            logLevels.push(""Warning"");
                        }
                        data.logLevels = logLevels.join(""|"");
                    }
                },

                columns: [
                    { name: 'createdDate'");
                WriteLiteral(@" },
                    { name: 'machineName' },
                    { name: 'severity' },
                    { name: 'source' },
                    { name: 'content' }
                ],

                columnDefs: [
                    {
                        targets: [0],
                        createdCell: function(cell, cellData, rowData, rowIndex, colIndex) {
                            $(cell).html(ConvertUTCDateToLocalDate(cellData));
                        }
                    },
                    {
                        targets: [2],
                        className: ""text-center"",
                        render: function(data) {

                            switch (data) {
                            case ""Error"":
                            case ""Critical"":
                                return '<span class=""badge badge-danger"">' + data + '</span>';
                            case ""Warning"":
                                return '<span class=""badge badge-war");
                WriteLiteral(@"ning"">' + data + '</span>';
                            default:
                                    return '<span class=""badge badge-default"">' + data + '</span>';
                            }
                        }
                    },
                    {
                        targets: [3],
                        render: function (data) {

                            return '<div class=""logCategory"">' + data.replace(/\./g, '<span>.</span>') + '</div>';
                        }
                    },
                    {
                        targets: [4],
                        render: function(data) {

                            return '<div class=""logMessage"">' + data + '</div>';
                        }
                    }
                ]
            });

            var timezone = new Date().toString().split('(')[1].split(')')[0];
            $('#timeZoneMessage').text(""*all times in "" + timezone);

            $('input[type=""checkbox""').on('change',
    ");
                WriteLiteral("            function() {\r\n                    table.draw();\r\n                });\r\n        });\r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
