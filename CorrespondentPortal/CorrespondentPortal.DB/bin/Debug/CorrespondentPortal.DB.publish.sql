/*
Deployment script for CorrespondentPortal

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar Environment "DEV"
:setvar DatabaseName "CorrespondentPortal"
:setvar DefaultFilePrefix "CorrespondentPortal"
:setvar DefaultDataPath "G:\devcmssqldata01\SQLData\DEVCMS\"
:setvar DefaultLogPath "G:\devcmssqllog\SQLLog\DEVCMS\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[Clients]...';


GO
CREATE TABLE [dbo].[Clients] (
    [Id]               INT            NOT NULL,
    [Name]             NVARCHAR (50)  NOT NULL,
    [EventCallbackUrl] NVARCHAR (500) NOT NULL,
    [CreatedDate]      DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Configurations]...';


GO
CREATE TABLE [dbo].[Configurations] (
    [Key]   VARCHAR (50)  NOT NULL,
    [Value] VARCHAR (250) NOT NULL,
    PRIMARY KEY CLUSTERED ([Key] ASC)
);


GO
PRINT N'Creating [dbo].[InfrastructureLogs]...';


GO
CREATE TABLE [dbo].[InfrastructureLogs] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [MachineName] NVARCHAR (MAX) NOT NULL,
    [CreatedDate] DATETIME2 (7)  NOT NULL,
    [LogLevel]    INT            NOT NULL,
    [Category]    NVARCHAR (MAX) NOT NULL,
    [Content]     NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Clients]...';


GO
ALTER TABLE [dbo].[Clients]
    ADD DEFAULT '' FOR [EventCallbackUrl];


GO
PRINT N'Creating unnamed constraint on [dbo].[Clients]...';


GO
ALTER TABLE [dbo].[Clients]
    ADD DEFAULT GETDATE() FOR [CreatedDate];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
TRUNCATE TABLE [Configurations]

IF '$(Environment)' = 'LOCAL'
BEGIN
	INSERT INTO [CONFIGURATIONS] VALUES ('KeyStoreLocation', 'YourAppsKeyStore');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectKey', '9SWR87LX0BMVHAJW2HEVBWLM7UYUCN570Y8N7AI5');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectSecret', '5RB7OX616X73KV2JR1Z3NPDFP1NVNLTQK936HMD0');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectUrl', 'https://dev.fncconnect.com/');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncFileVaultUrl', 'https://devbravo.fncinc.com/FileVault/');
	INSERT INTO [CONFIGURATIONS] VALUES ('AdminLimitedAccessGroups', 'allfnc');
	INSERT INTO [CONFIGURATIONS] VALUES ('AdminAllAccessGroups', 'allfnc');
	INSERT INTO [CONFIGURATIONS] VALUES ('SmtpServer','mail.fncinc.com');
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationTo',''); 
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationFrom','no-reply@corelogic.com');
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationCheckInterval','0/5 * * * *');
	INSERT INTO [CONFIGURATIONS] VALUES ('UseHealthCheckNotification','false');
	INSERT INTO [CONFIGURATIONS] VALUES ('SiteURL','YourSiteUrl');
	INSERT INTO [CONFIGURATIONS] VALUES ('InfrastructureLogLevels','Critical|Error');

	--**Example of adding a client
	--IF EXISTS(SELECT 1 FROM dbo.Clients WHERE Id = 68)
	--	UPDATE Clients SET Name = 'CorrespondentPortal', EventCallbackUrl = 'https://devbravo.fncinc.com/statuscodeendpoint/api/statuscode/200', CreatedDate = GETDATE() WHERE Id = 68  
	--ELSE
	--	INSERT INTO dbo.Clients (Id, [Name], EventCallbackUrl, CreatedDate) VALUES (68, 'CorrespondentPortal', 'https://devbravo.fncinc.com/statuscodeendpoint/api/statuscode/200', GETDATE())
END
IF '$(Environment)' = 'DEV'
BEGIN
	INSERT INTO [CONFIGURATIONS] VALUES ('KeyStoreLocation', 'YourAppsKeyStore');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectKey', '9SWR87LX0BMVHAJW2HEVBWLM7UYUCN570Y8N7AI5');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectSecret', '5RB7OX616X73KV2JR1Z3NPDFP1NVNLTQK936HMD0');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectUrl', 'https://dev.fncconnect.com/');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncFileVaultUrl', 'https://devbravo.fncinc.com/FileVault/');
	INSERT INTO [CONFIGURATIONS] VALUES ('AdminLimitedAccessGroups', 'allfnc');
	INSERT INTO [CONFIGURATIONS] VALUES ('AdminAllAccessGroups', 'allfnc');
	INSERT INTO [CONFIGURATIONS] VALUES ('SmtpServer','mail.fncinc.com');
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationTo',''); 
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationFrom','no-reply@corelogic.com');
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationCheckInterval','0/5 * * * *');
	INSERT INTO [CONFIGURATIONS] VALUES ('UseHealthCheckNotification','false');
	INSERT INTO [CONFIGURATIONS] VALUES ('SiteURL','YourSiteUrl');
	INSERT INTO [CONFIGURATIONS] VALUES ('InfrastructureLogLevels','');

--**Add Clients Here**
END
IF '$(Environment)' = 'QA'
BEGIN
	INSERT INTO [CONFIGURATIONS] VALUES ('KeyStoreLocation', 'YourAppsKeyStore');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectKey', 'YourAppsKey');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectSecret', 'YourAppsSecret');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectUrl', 'https://qa.fncconnect.com/');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncFileVaultUrl', 'https://qabravo.fncinc.com/FileVault/');
	INSERT INTO [CONFIGURATIONS] VALUES ('AdminLimitedAccessGroups', 'allfnc');
	INSERT INTO [CONFIGURATIONS] VALUES ('AdminAllAccessGroups', 'allfnc');
	INSERT INTO [CONFIGURATIONS] VALUES ('SmtpServer','mail.fncinc.com');
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationTo',''); 
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationFrom','no-reply@corelogic.com');
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationCheckInterval','0/5 * * * *');
	INSERT INTO [CONFIGURATIONS] VALUES ('UseHealthCheckNotification','false');
	INSERT INTO [CONFIGURATIONS] VALUES ('SiteURL','YourSiteUrl');
	INSERT INTO [CONFIGURATIONS] VALUES ('InfrastructureLogLevels','');
	
--**Add Clients Here**
END
IF '$(Environment)' = 'UAT'
BEGIN
	INSERT INTO [CONFIGURATIONS] VALUES ('KeyStoreLocation', 'YourAppsKeyStore');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectKey', 'YourAppsKey');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectSecret', 'YourAppsSecret');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectUrl', 'https://uat.fncconnect.com/');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncFileVaultUrl', 'https://uatbravo.fncinc.com/FileVault/');
	INSERT INTO [CONFIGURATIONS] VALUES ('AdminLimitedAccessGroups', 'allfnc');
	INSERT INTO [CONFIGURATIONS] VALUES ('AdminAllAccessGroups', 'allfnc');
	INSERT INTO [CONFIGURATIONS] VALUES ('SmtpServer','shortestyard.fncinc.com');
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationTo',''); 
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationFrom','no-reply@corelogic.com');
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationCheckInterval','0/5 * * * *');
	INSERT INTO [CONFIGURATIONS] VALUES ('UseHealthCheckNotification','false');
	INSERT INTO [CONFIGURATIONS] VALUES ('SiteURL','YourSiteUrl');
	INSERT INTO [CONFIGURATIONS] VALUES ('InfrastructureLogLevels','');

--**Add Clients Here**
END
IF '$(Environment)' = 'PROD'
BEGIN
	INSERT INTO [CONFIGURATIONS] VALUES ('KeyStoreLocation', 'YourAppsKeyStore');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectKey', 'YourAppsKey');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectSecret', 'YourAppsSecret');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncConnectUrl', 'https://www.fncconnect.com/');
	INSERT INTO [CONFIGURATIONS] VALUES ('FncFileVaultUrl', 'https://entry.gofnc.com/FileVault/');
	INSERT INTO [CONFIGURATIONS] VALUES ('AdminLimitedAccessGroups', 'allfnc');
	INSERT INTO [CONFIGURATIONS] VALUES ('AdminAllAccessGroups', '');
	INSERT INTO [CONFIGURATIONS] VALUES ('SmtpServer','longestyard.fncinc.com');
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationTo',''); 
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationFrom','no-reply@corelogic.com');
	INSERT INTO [CONFIGURATIONS] VALUES ('HealthCheckNotificationCheckInterval','0/5 * * * *');
	INSERT INTO [CONFIGURATIONS] VALUES ('UseHealthCheckNotification','false');
	INSERT INTO [CONFIGURATIONS] VALUES ('SiteURL','YourSiteUrl');
	INSERT INTO [CONFIGURATIONS] VALUES ('InfrastructureLogLevels','');
	
--**Add Clients Here**
END
GO

GO
PRINT N'Update complete.';


GO
